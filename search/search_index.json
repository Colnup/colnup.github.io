{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A blatent copy of the Svelte doc Published for education purposes. What is Svelte? Svelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM. Learn more at the Svelte website , or stop by the Discord chatroom . Supporting Svelte Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you'd like to support their efforts, please consider: Becoming a backer on Open Collective . Funds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly. Roadmap You may view our roadmap if you'd like to see what we're currently working on. Contributing Please see the Contributing Guide and the svelte package for information on contributing to Svelte. svelte.dev The source code for https://svelte.dev lives in the sites folder, with all the documentation right here . The site is built with SvelteKit . Is svelte.dev down? Probably not, but it's possible. If you can't seem to access any .dev sites, check out this SuperUser question and answer . License MIT","title":"Home"},{"location":"#a-blatent-copy-of-the-svelte-doc","text":"Published for education purposes.","title":"A blatent copy of the Svelte doc"},{"location":"#what-is-svelte","text":"Svelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM. Learn more at the Svelte website , or stop by the Discord chatroom .","title":"What is Svelte?"},{"location":"#supporting-svelte","text":"Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you'd like to support their efforts, please consider: Becoming a backer on Open Collective . Funds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly.","title":"Supporting Svelte"},{"location":"#roadmap","text":"You may view our roadmap if you'd like to see what we're currently working on.","title":"Roadmap"},{"location":"#contributing","text":"Please see the Contributing Guide and the svelte package for information on contributing to Svelte.","title":"Contributing"},{"location":"#sveltedev","text":"The source code for https://svelte.dev lives in the sites folder, with all the documentation right here . The site is built with SvelteKit .","title":"svelte.dev"},{"location":"#is-sveltedev-down","text":"Probably not, but it's possible. If you can't seem to access any .dev sites, check out this SuperUser question and answer .","title":"Is svelte.dev down?"},{"location":"#license","text":"MIT","title":"License"},{"location":"CODE_OF_CONDUCT/","text":"Svelte Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at coc@sveltesociety.dev. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html . Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq . Translations are available at https://www.contributor-covenant.org/translations .","title":"Code of conduct"},{"location":"CODE_OF_CONDUCT/#svelte-code-of-conduct","text":"","title":"Svelte Code of Conduct"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","text":"Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.","title":"Enforcement Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at coc@sveltesociety.dev. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","text":"Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:","title":"Enforcement Guidelines"},{"location":"CODE_OF_CONDUCT/#1-correction","text":"Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.","title":"1. Correction"},{"location":"CODE_OF_CONDUCT/#2-warning","text":"Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.","title":"2. Warning"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","text":"Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.","title":"3. Temporary Ban"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","text":"Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community.","title":"4. Permanent Ban"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html . Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq . Translations are available at https://www.contributor-covenant.org/translations .","title":"Attribution"},{"location":"CONTRIBUTING/","text":"Contributing to Svelte Svelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM. The Open Source Guides website has a collection of resources for individuals, communities, and companies. These resources help people who want to learn how to run and contribute to open source projects. Contributors and people new to open source alike will find the following guides especially useful: How to Contribute to Open Source Building Welcoming Communities Get involved There are many ways to contribute to Svelte, and many of them do not involve writing any code. Here's a few ideas to get started: Simply start using Svelte. Go through the Getting Started guide. Does everything work as expected? If not, we're always looking for improvements. Let us know by opening an issue . Look through the open issues . A good starting point would be issues tagged good first issue . Provide workarounds, ask for clarification, or suggest labels. Help triage issues . If you find an issue you would like to fix, open a pull request . Read through our tutorials . If you find anything that is confusing or can be improved, you can make edits by clicking \"Edit this page\" at the bottom left of the tutorial page. Take a look at the features requested by others in the community and consider opening a pull request if you see something you want to work on. Contributions are very welcome. If you think you need help planning your contribution, please ping us on Discord at svelte.dev/chat and let us know you are looking for a bit of help. Triaging issues and pull requests One great way you can contribute to the project without writing any code is to help triage issues and pull requests as they come in. Ask for more information if you believe the issue does not provide all the details required to solve it. Flag issues that are stale or that should be closed. Ask for test plans and review code. Our process RFCs If you'd like to propose an implementation for a large new feature or change then please create an RFC to discuss it up front. Roadmap When deciding where to contribute, you may wish to take a look at our roadmap . The Svelte team generally works on a single major effort at a time. This has a couple benefits for us as maintainers. First, it allows us to focus and make noticeable progress in an area being proactive rather than reactive. Secondly, it allows us to handle related issues and PRs together. By batching issues and PRs together we\u2019re able to ensure implementations and fixes holistically address the set of problems and use cases encountered by our users. Maintainer meetings The maintainers meet on the final Saturday of each month. While these meetings are not open publicly, we will report back by leaving a comment on each issue discussed. We will generally discuss items aligning with our roadmap, but major PRs needing discussion amongst the maintainers can be added to the agenda for the monthly maintainer\u2019s meeting. However, we typically are only able to get to a couple of items that are not aligned with our current priority. Prioritization We do our best to review PRs and RFCs as they are sent, but it is difficult to keep up. We welcome help in reviewing PRs, RFCs, and issues. If an item aligns with the current priority on our roadmap , it is more likely to be reviewed quickly. PRs to the most important and active ones repositories get reviewed more quickly while PRs to smaller inactive repos may sit for a bit before we periodically come by and review the pending PRs in a batch. Bugs We use GitHub issues for our public bugs. If you would like to report a problem, take a look around and see if someone already opened an issue about it. If you are certain this is a new unreported bug, you can submit a bug report . If you have questions about using Svelte, contact us on Discord at svelte.dev/chat , and we will do our best to answer your questions. If you see anything you'd like to be implemented, create a feature request issue Reporting new issues When opening a new issue , always make sure to fill out the issue template. This step is very important! Not doing so may result in your issue not being managed in a timely fashion. Don't take this personally if this happens, and feel free to open a new issue once you've gathered all the information required by the template. One issue, one bug: Please report a single bug per issue. Provide reproduction steps: List all the steps necessary to reproduce the issue. The person reading your bug report should be able to follow these steps to reproduce your issue with minimal effort. If possible, use the REPL to create your reproduction. Pull requests HEADS UP: Svelte 5 will likely change a lot on the compiler. For that reason, please don't open PRs that are large in scope, touch more than a couple of files etc. In other words, bug fixes are fine, but big feature PRs will likely not be merged. Proposing a change If you would like to request a new feature or enhancement but are not yet thinking about opening a pull request, you can also file an issue with feature template . If you're only fixing a bug, it's fine to submit a pull request right away, but we still recommend that you file an issue detailing what you're fixing. This is helpful in case we don't accept that specific fix but want to keep track of the issue. Small pull requests are much easier to review and more likely to get merged. Installation Ensure you have pnpm installed. After cloning the repository, run pnpm install . Developing To build the UMD version of svelte/compiler (this is only necessary for CommonJS consumers, or in-browser use), run pnpm build inside packages/svelte . To rebuild whenever source files change, run pnpm dev . Creating a branch Fork the repository and create your branch from main . If you've never sent a GitHub pull request before, you can learn how from this free video series . Testing A good test plan has the exact commands you ran and their output, provides screenshots or videos if the pull request changes UI. If you've changed APIs, update the documentation. Writing tests All tests are located in /test folder. Test samples are kept in /test/xxx/samples folder. Running tests PREREQUISITE: Install chromium via playwright by running pnpm playwright install chromium To run test, run pnpm test . To run a particular test suite, use pnpm test <suite-name> , for example: bash pnpm test validator To filter tests within a test suite, use pnpm test <suite-name> -- -t <test-name> , for example: bash pnpm test validator -- -t a11y-alt-text (You can also do FILTER=<test-name> pnpm test <suite-name> which removes other tests rather than simply skipping them \u2014 this will result in faster and more compact test results, but it's non-idiomatic. Choose your fighter.) Updating .expected files Tests suites like snapshot and parser assert that the generated output matches the existing snapshot. To update these snapshots, run UPDATE_SNAPSHOTS=true pnpm test . Typechecking To typecheck the codebase, run pnpm check inside packages/svelte . To typecheck in watch mode, run pnpm check:watch . Style guide Eslint will catch most styling issues that may exist in your code. You can check the status of your code styling by simply running pnpm lint . Code conventions snake_case for internal variable names and methods. camelCase for public variable names and methods. Generating types Types are auto-generated from the source, but the result is checked in to ensure no accidental changes slip through. Run pnpm generate:types to regenerate the types. Sending your pull request Please make sure the following is done when submitting a pull request: Describe your test plan in your pull request description. Make sure to test your changes. Make sure your code lints ( pnpm lint ). Make sure your tests pass ( pnpm test ). All pull requests should be opened against the main branch. Make sure the PR does only one thing, otherwise please split it. If this change should contribute to a version bump, run npx changeset at the root of the repository after a code change and select the appropriate packages. Breaking changes When adding a new breaking change, follow this template in your pull request: ### New breaking change here - **Who does this affect**: - **How to migrate**: - **Why make this breaking change**: - **Severity (number of people affected x effort)**: Reviewing pull requests If you'd like to manually test a pull request in another pnpm project, you can do so by running pnpm add -D \"github:sveltejs/svelte#path:packages/svelte&branch-name\" in that project. License By contributing to Svelte, you agree that your contributions will be licensed under its MIT license . Questions Feel free to ask in #contributing on Discord if you have questions about our process, how to proceed, etc.","title":"Contributing"},{"location":"CONTRIBUTING/#contributing-to-svelte","text":"Svelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM. The Open Source Guides website has a collection of resources for individuals, communities, and companies. These resources help people who want to learn how to run and contribute to open source projects. Contributors and people new to open source alike will find the following guides especially useful: How to Contribute to Open Source Building Welcoming Communities","title":"Contributing to Svelte"},{"location":"CONTRIBUTING/#get-involved","text":"There are many ways to contribute to Svelte, and many of them do not involve writing any code. Here's a few ideas to get started: Simply start using Svelte. Go through the Getting Started guide. Does everything work as expected? If not, we're always looking for improvements. Let us know by opening an issue . Look through the open issues . A good starting point would be issues tagged good first issue . Provide workarounds, ask for clarification, or suggest labels. Help triage issues . If you find an issue you would like to fix, open a pull request . Read through our tutorials . If you find anything that is confusing or can be improved, you can make edits by clicking \"Edit this page\" at the bottom left of the tutorial page. Take a look at the features requested by others in the community and consider opening a pull request if you see something you want to work on. Contributions are very welcome. If you think you need help planning your contribution, please ping us on Discord at svelte.dev/chat and let us know you are looking for a bit of help.","title":"Get involved"},{"location":"CONTRIBUTING/#triaging-issues-and-pull-requests","text":"One great way you can contribute to the project without writing any code is to help triage issues and pull requests as they come in. Ask for more information if you believe the issue does not provide all the details required to solve it. Flag issues that are stale or that should be closed. Ask for test plans and review code.","title":"Triaging issues and pull requests"},{"location":"CONTRIBUTING/#our-process","text":"","title":"Our process"},{"location":"CONTRIBUTING/#rfcs","text":"If you'd like to propose an implementation for a large new feature or change then please create an RFC to discuss it up front.","title":"RFCs"},{"location":"CONTRIBUTING/#roadmap","text":"When deciding where to contribute, you may wish to take a look at our roadmap . The Svelte team generally works on a single major effort at a time. This has a couple benefits for us as maintainers. First, it allows us to focus and make noticeable progress in an area being proactive rather than reactive. Secondly, it allows us to handle related issues and PRs together. By batching issues and PRs together we\u2019re able to ensure implementations and fixes holistically address the set of problems and use cases encountered by our users.","title":"Roadmap"},{"location":"CONTRIBUTING/#maintainer-meetings","text":"The maintainers meet on the final Saturday of each month. While these meetings are not open publicly, we will report back by leaving a comment on each issue discussed. We will generally discuss items aligning with our roadmap, but major PRs needing discussion amongst the maintainers can be added to the agenda for the monthly maintainer\u2019s meeting. However, we typically are only able to get to a couple of items that are not aligned with our current priority.","title":"Maintainer meetings"},{"location":"CONTRIBUTING/#prioritization","text":"We do our best to review PRs and RFCs as they are sent, but it is difficult to keep up. We welcome help in reviewing PRs, RFCs, and issues. If an item aligns with the current priority on our roadmap , it is more likely to be reviewed quickly. PRs to the most important and active ones repositories get reviewed more quickly while PRs to smaller inactive repos may sit for a bit before we periodically come by and review the pending PRs in a batch.","title":"Prioritization"},{"location":"CONTRIBUTING/#bugs","text":"We use GitHub issues for our public bugs. If you would like to report a problem, take a look around and see if someone already opened an issue about it. If you are certain this is a new unreported bug, you can submit a bug report . If you have questions about using Svelte, contact us on Discord at svelte.dev/chat , and we will do our best to answer your questions. If you see anything you'd like to be implemented, create a feature request issue","title":"Bugs"},{"location":"CONTRIBUTING/#reporting-new-issues","text":"When opening a new issue , always make sure to fill out the issue template. This step is very important! Not doing so may result in your issue not being managed in a timely fashion. Don't take this personally if this happens, and feel free to open a new issue once you've gathered all the information required by the template. One issue, one bug: Please report a single bug per issue. Provide reproduction steps: List all the steps necessary to reproduce the issue. The person reading your bug report should be able to follow these steps to reproduce your issue with minimal effort. If possible, use the REPL to create your reproduction.","title":"Reporting new issues"},{"location":"CONTRIBUTING/#pull-requests","text":"HEADS UP: Svelte 5 will likely change a lot on the compiler. For that reason, please don't open PRs that are large in scope, touch more than a couple of files etc. In other words, bug fixes are fine, but big feature PRs will likely not be merged.","title":"Pull requests"},{"location":"CONTRIBUTING/#proposing-a-change","text":"If you would like to request a new feature or enhancement but are not yet thinking about opening a pull request, you can also file an issue with feature template . If you're only fixing a bug, it's fine to submit a pull request right away, but we still recommend that you file an issue detailing what you're fixing. This is helpful in case we don't accept that specific fix but want to keep track of the issue. Small pull requests are much easier to review and more likely to get merged.","title":"Proposing a change"},{"location":"CONTRIBUTING/#installation","text":"Ensure you have pnpm installed. After cloning the repository, run pnpm install .","title":"Installation"},{"location":"CONTRIBUTING/#developing","text":"To build the UMD version of svelte/compiler (this is only necessary for CommonJS consumers, or in-browser use), run pnpm build inside packages/svelte . To rebuild whenever source files change, run pnpm dev .","title":"Developing"},{"location":"CONTRIBUTING/#creating-a-branch","text":"Fork the repository and create your branch from main . If you've never sent a GitHub pull request before, you can learn how from this free video series .","title":"Creating a branch"},{"location":"CONTRIBUTING/#testing","text":"A good test plan has the exact commands you ran and their output, provides screenshots or videos if the pull request changes UI. If you've changed APIs, update the documentation.","title":"Testing"},{"location":"CONTRIBUTING/#writing-tests","text":"All tests are located in /test folder. Test samples are kept in /test/xxx/samples folder.","title":"Writing tests"},{"location":"CONTRIBUTING/#running-tests","text":"PREREQUISITE: Install chromium via playwright by running pnpm playwright install chromium To run test, run pnpm test . To run a particular test suite, use pnpm test <suite-name> , for example: bash pnpm test validator To filter tests within a test suite, use pnpm test <suite-name> -- -t <test-name> , for example: bash pnpm test validator -- -t a11y-alt-text (You can also do FILTER=<test-name> pnpm test <suite-name> which removes other tests rather than simply skipping them \u2014 this will result in faster and more compact test results, but it's non-idiomatic. Choose your fighter.)","title":"Running tests"},{"location":"CONTRIBUTING/#updating-expected-files","text":"Tests suites like snapshot and parser assert that the generated output matches the existing snapshot. To update these snapshots, run UPDATE_SNAPSHOTS=true pnpm test .","title":"Updating .expected files"},{"location":"CONTRIBUTING/#typechecking","text":"To typecheck the codebase, run pnpm check inside packages/svelte . To typecheck in watch mode, run pnpm check:watch .","title":"Typechecking"},{"location":"CONTRIBUTING/#style-guide","text":"Eslint will catch most styling issues that may exist in your code. You can check the status of your code styling by simply running pnpm lint .","title":"Style guide"},{"location":"CONTRIBUTING/#code-conventions","text":"snake_case for internal variable names and methods. camelCase for public variable names and methods.","title":"Code conventions"},{"location":"CONTRIBUTING/#generating-types","text":"Types are auto-generated from the source, but the result is checked in to ensure no accidental changes slip through. Run pnpm generate:types to regenerate the types.","title":"Generating types"},{"location":"CONTRIBUTING/#sending-your-pull-request","text":"Please make sure the following is done when submitting a pull request: Describe your test plan in your pull request description. Make sure to test your changes. Make sure your code lints ( pnpm lint ). Make sure your tests pass ( pnpm test ). All pull requests should be opened against the main branch. Make sure the PR does only one thing, otherwise please split it. If this change should contribute to a version bump, run npx changeset at the root of the repository after a code change and select the appropriate packages.","title":"Sending your pull request"},{"location":"CONTRIBUTING/#breaking-changes","text":"When adding a new breaking change, follow this template in your pull request: ### New breaking change here - **Who does this affect**: - **How to migrate**: - **Why make this breaking change**: - **Severity (number of people affected x effort)**:","title":"Breaking changes"},{"location":"CONTRIBUTING/#reviewing-pull-requests","text":"If you'd like to manually test a pull request in another pnpm project, you can do so by running pnpm add -D \"github:sveltejs/svelte#path:packages/svelte&branch-name\" in that project.","title":"Reviewing pull requests"},{"location":"CONTRIBUTING/#license","text":"By contributing to Svelte, you agree that your contributions will be licensed under its MIT license .","title":"License"},{"location":"CONTRIBUTING/#questions","text":"Feel free to ask in #contributing on Discord if you have questions about our process, how to proceed, etc.","title":"Questions"},{"location":"LICENSE/","text":"Copyright (c) 2016-24 these people Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"}]}